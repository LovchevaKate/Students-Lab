{"version":3,"sources":["components/NavBar.js","components/SignIn.js","components/SignUp.js","components/Task.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","isOpen","LoggedIn","logOffClick","localStorage","removeItem","_this","setState","renderloggedIn","getItem","classes","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","react_default","a","createElement","className","AppBar","position","Toolbar","Button","color","href","onClick","renderloggedOut","console","log","this","Component","url","SignIn","login","password","onChange","_ref","_ref$target","target","name","value","Object","defineProperty","handleSubmit","_callee","e","regenerator_default","wrap","_context","prev","next","preventDefault","axios","post","then","users","setItem","data","token","id","props","history","push","catch","alert","stop","Container","component","maxWidth","CssBaseline","paper","Avatar","avatar","LockOutlined_default","Typography","variant","form","noValidate","onSubmit","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","type","submit","Grid","container","item","Link","withStyles","@global","body","backgroundColor","palette","common","white","marginTop","display","flexDirection","alignItems","secondary","main","width","SignUp","justify","concat","Board","card","text","handleInputChange","createCard","idcard","list","headers","Authorization","toConsumableArray","deleteTask","delete","_this2","get","idList","_this3","map","Card","style","CardContent","react_textarea_autosize_esm_browser","placeholder","resize","overflow","outline","border","userId","createList","deleteList","styles","boardConteiner","cardConteiner","Task","padding","borderRadius","height","App","react_router_dom","components_NavBar","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.643dcc90.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    LoggedIn: false\r\n  };\r\n\r\n  logOffClick = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"loggedIn\");\r\n    localStorage.removeItem(\"login\");\r\n    this.setState({\r\n      LoggedIn: false\r\n    });\r\n  };\r\n\r\n  renderloggedIn = () => {\r\n    let loggedIn = localStorage.getItem(\"loggedIn\");\r\n    if (loggedIn === \"loggedIn\")\r\n      this.setState({\r\n        LoggedIn: true\r\n      });\r\n\r\n    const classes = makeStyles(theme => ({\r\n      root: {\r\n        flexGrow: 1\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2)\r\n      },\r\n      title: {\r\n        flexGrow: 1\r\n      }\r\n    }));\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Button color=\"inherit\" href=\"/board\" className={classes.title}>\r\n              Home\r\n            </Button>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={this.logOffClick}\r\n              href=\"/signin\"\r\n              className={classes.title}\r\n            >\r\n              Log out\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderloggedOut = () => {\r\n    const classes = makeStyles(theme => ({\r\n      root: {\r\n        flexGrow: 1\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2)\r\n      },\r\n      title: {\r\n        flexGrow: 1\r\n      }\r\n    }));\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Button color=\"inherit\" href=\"/signin\" className={classes.title}>\r\n              Sign In\r\n            </Button>\r\n            <Button color=\"inherit\" href=\"/signup\" className={classes.title}>\r\n              Sign Up\r\n            </Button>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={this.logOffClick}\r\n              href=\"/signin\"\r\n              className={classes.title}\r\n            >\r\n              Log out\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.LoggedIn);\r\n\r\n    return this.state.LoggedIn ? this.renderloggedIn() : this.renderloggedOut();\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"https://localhost:44342/api/Identity/token\";\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n});\r\n\r\nclass SignIn extends Component {\r\n  state = { login: \"\", password: \"\", LoggedIn: false };\r\n\r\n  onChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      axios\r\n        .post(url, {\r\n          password: this.state.password,\r\n          login: this.state.login\r\n        })\r\n        .then(users => {\r\n          localStorage.setItem(\"loggedIn\", \"loggedIn\");\r\n          localStorage.setItem(\"login\", users.data.login);\r\n          localStorage.setItem(\"token\", users.data.token);\r\n          localStorage.setItem(\"userId\", users.data.id);\r\n          this.setState({ LoggedIn: true });\r\n        })\r\n        .then(() => {\r\n          this.props.history.push(\"/board\");\r\n        })\r\n        .catch(e => {\r\n          alert(e);\r\n        });\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Login\"\r\n              name=\"login\"\r\n              autoComplete=\"login\"\r\n              autoFocus\r\n              onChange={this.onChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.onChange}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"https://localhost:44342/api/UserAPI\";\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n});\r\n\r\nclass SignUp extends Component {\r\n  state = { login: \"\", password: \"\" };\r\n\r\n  onChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      axios\r\n        .post(url, {\r\n          password: this.state.password,\r\n          login: this.state.login\r\n        })\r\n        .catch(e => {\r\n          alert(e);\r\n        });\r\n      this.props.history.push(\"/signin\");\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Login\"\r\n              name=\"login\"\r\n              autoComplete=\"login\"\r\n              autoFocus\r\n              onChange={this.onChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.onChange}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signin\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextArea from \"react-textarea-autosize\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"https://localhost:44342/api/list\";\r\nconst token = `Bearer ${localStorage.getItem(\"token\")}`;\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    card: [],\r\n    text: \"\"\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${url}/${this.props.idcard}/CardAPI`, {\r\n        headers: {\r\n          Authorization: token\r\n        },\r\n        idList: this.props.idcard\r\n      })\r\n      .then(card => {\r\n        this.setState({\r\n          card: card.data\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  createCard = async e => {\r\n    try {\r\n      e.preventDefault();\r\n      axios\r\n        .post(\r\n          `${url}/${this.props.idcard}/CardAPI`,\r\n          {\r\n            list: this.props.idcard,\r\n            text: this.state.text\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n            }\r\n          }\r\n        )\r\n        .then(card => {\r\n          this.setState({\r\n            card: [...this.state.card, card.data]\r\n          });\r\n          this.setState({ text: \"\" });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  deleteTask = id => {\r\n    try {\r\n      axios\r\n        .delete(`${url}/${this.props.idcard}/CardAPI/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n          }\r\n        })\r\n        .then(card => {\r\n          this.setState({\r\n            card: card.data\r\n          });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.state.card.map(item => (\r\n            <Card\r\n              style={{\r\n                color: \"#2F3640\",\r\n                backgroundColor: \"#45D09E\",\r\n                marginTop: \"10px\",\r\n                width: \"100%\"\r\n              }}\r\n            >\r\n              <CardContent>{item.text}</CardContent>\r\n              <Button\r\n                onClick={() => this.deleteTask(item.id)}\r\n                style={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"#E85668\",\r\n                  margin: \"10px\"\r\n                }}\r\n              >\r\n                Delete Task\r\n              </Button>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <Card\r\n            style={{\r\n              marginTop: \"25%\"\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <TextArea\r\n                name=\"text\"\r\n                autoFocus\r\n                value={this.state.text}\r\n                onChange={this.handleInputChange}\r\n                placeholder=\"Enter task text\"\r\n                style={{\r\n                  resize: \"none\",\r\n                  width: \"100%\",\r\n                  overflow: \"hidden\",\r\n                  outline: \"none\",\r\n                  border: \"none\"\r\n                }}\r\n              />\r\n            </CardContent>\r\n            <Button\r\n              onClick={this.createCard}\r\n              style={{\r\n                color: \"white\",\r\n                backgroundColor: \"#45D09E\",\r\n                margin: \"10px\"\r\n              }}\r\n            >\r\n              Create Task\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextArea from \"react-textarea-autosize\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport Task from \"./Task\";\r\n\r\nlet userId = localStorage.getItem(\"userId\");\r\nconst token = `Bearer ${localStorage.getItem(\"token\")}`;\r\nconst url = `https://localhost:44342/api/user/${userId}/ListAPI`;\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    list: [],\r\n    title: \"\"\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          Authorization: token\r\n        }\r\n      })\r\n      .then(list => {\r\n        this.setState({\r\n          list: list.data\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  createList = () => {\r\n    try {\r\n      axios\r\n        .post(\r\n          url,\r\n          {\r\n            userId: userId,\r\n            title: this.state.title\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: token\r\n            }\r\n          }\r\n        )\r\n        .then(list => {\r\n          this.setState({\r\n            list: [...this.state.list, list.data]\r\n          });\r\n          this.setState({\r\n            title: \"\"\r\n          });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  deleteList = id => {\r\n    try {\r\n      axios\r\n        .delete(`${url}/${id}`, {\r\n          headers: {\r\n            Authorization: token\r\n          }\r\n        })\r\n        .then(list => {\r\n          this.setState({\r\n            list: list.data\r\n          });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={styles.boardConteiner}>\r\n          {this.state.list.map(item => (\r\n            <Card style={styles.cardConteiner} id={item.id}>\r\n              <CardContent>\r\n                {item.title}\r\n                <Task idcard={item.id} />\r\n              </CardContent>\r\n\r\n              <Button\r\n                onClick={() => this.deleteList(item.id)}\r\n                style={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"#E85668\",\r\n                  margin: \"15px\"\r\n                }}\r\n              >\r\n                Delete Card\r\n              </Button>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n\r\n        <div style={styles.boardConteiner}>\r\n          <Card style={styles.cardConteiner}>\r\n            <TextArea\r\n              name=\"title\"\r\n              autoFocus\r\n              value={this.state.title}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Enter list title\"\r\n              style={{\r\n                resize: \"none\",\r\n                width: \"100%\",\r\n                overflow: \"hidden\",\r\n                outline: \"none\",\r\n                border: \"none\",\r\n                padding: \"10px\"\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              onClick={this.createList}\r\n              style={{\r\n                color: \"white\",\r\n                backgroundColor: \"#45D09E\",\r\n                margin: \"10px\"\r\n              }}\r\n            >\r\n              Create new Card\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  boardConteiner: {\r\n    display: \"flex\",\r\n    margin: 10\r\n  },\r\n  cardConteiner: {\r\n    width: 200,\r\n    borderRadius: 3,\r\n    margin: 10,\r\n    height: \"100%\"\r\n  }\r\n};\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Board from \"./components/Board\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <NavBar />\r\n          <Route name=\"signin\" exact path=\"/signin\" component={SignIn} />\r\n          <Route name=\"signup\" exact path=\"/signup\" component={SignUp} />\r\n          <Route name=\"board\" exact path=\"/board\" component={Board} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}